{"version":3,"sources":["style.js","App.js","index.js"],"names":["Wrapper","styled","div","LeftWrapper","RightWrapper","StrokeShow","StrokeNameList","CharacterWrapper","FunctionWrapper","HistoryWrapper","Character","ButtonWrapper","TitleTextSpan","span","TitleTextSpan2","ContextRegularSpan","ImageContainer","TitleWrapper","DataSetTitle","RegisterListener","document","addEventListener","e","code","console","log","TextRegular","text","DescriptionArea","currentStroke","tempPointsLength","length","strokeOrderLength","style","width","padding","border","borderRadius","borderTop","title","id","name","percent","steps","showInfo","bordered","Item","label","src","strokeOrderImageUrl","getMapImageUrls","res","images","forEach","image","fileName","App","canvasRef","useRef","useState","setCurrentStroke","currentChar","setCurrentChar","strokeList","setStrokeList","strokeIndex","setStrokeIndex","strokeCompleted","setStrokeCompleted","imagesUrls","mapUrls","systemInfo","setSystemInfo","result","setResult","tempPoints","addPoints","currentAuthor","setCurrentAuthor","sysInfoLoading","setSysInfoLoading","currentCharLoading","setCurrentCharLoading","strokeListLoading","setStrokeListLoading","submitLoading","setSubmitLoading","submitSuccess","setSubmitSuccess","useEffect","a","axios","reqResult","data","canvasClear","currentImageId","author","c_id","strokesData","strokes","current","getContext","clearRect","nextStroke","message","warning","thisStroke","record","fontSize","margin","tip","description","type","Group","value","size","buttonStyle","map","item","Button","onClick","dataSetId","placeholder","prefix","UserOutlined","onChange","target","status","total","alt","left","position","height","ref","error","canvas","getBoundingClientRect","top","x","clientX","y","clientY","ctx","lineWidth","beginPath","arc","Math","PI","strokeStyle","fillStyle","stroke","Paint","disabled","danger","borderBottom","overflow","index","display","flexDirection","alignItems","item2","index2","ans","charId","charName","post","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2a2ffcad.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 50px auto;\r\n  width: 1500px;\r\n  height: 800px;\r\n  border: 2px solid black;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  canvas {\r\n    width: 256px;\r\n    height: 256px;\r\n    border: 2px solid black;\r\n  }\r\n`;\r\n\r\n// 左侧\r\nexport const LeftWrapper = styled.div`\r\n  width: 750px;\r\n  height: 750px;\r\n  border-right: 2px solid gray;\r\n  padding-right: 5px;\r\n  /* border-radius: 20px; */\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n`;\r\n\r\n// 右侧大的组件\r\nexport const RightWrapper = styled.div`\r\n  margin-left: auto;\r\n  width: 800px;\r\n  height: 750px;\r\n  /* border: 2px solid black; */\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const StrokeShow = styled.div`\r\n  margin: 0 20px;\r\n  /* border: 1px solid red; */\r\n  /* border-top: 1px solid #C0C0C0; */\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .text {\r\n    font-size : 25px;\r\n  }\r\n`;\r\n\r\nexport const StrokeNameList = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin-top: 10px;\r\n  border-bottom: #C0C0C0;\r\n  width: 650px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  border-bottom: 1px solid white;\r\n`;\r\n\r\nexport const CharacterWrapper = styled.div`\r\n  width: 650px;\r\n  height: 600px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FunctionWrapper = styled.div`\r\n  width: 300px;\r\n  /* border: 1px solid blue; */\r\n`;\r\n\r\nexport const HistoryWrapper = styled.div`\r\n  margin: 20px;\r\n  width: 250px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Character = styled.div`\r\n  width: 300px;\r\n  height: 300px;\r\n  border: 1px solid gray;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  canvas {\r\n    width: 256px;\r\n    height: 256px;\r\n    margin: 22px;\r\n    border: 0;\r\n  }\r\n  img {\r\n    width: 256px;\r\n    height: 256px;\r\n    border: 1px solid red;\r\n    margin: 22px;\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  margin-top: 20px;\r\n  width: 256px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  Button {\r\n    margin: 5px;\r\n  }\r\n`;\r\n\r\nexport const StrokePicture = styled.div`\r\n  width: 45px;\r\n  height: 45px;\r\n  border: 2px solid #1890ff;\r\n  img {\r\n    margin: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  \r\n`;\r\n\r\nexport const CurrentStrokeWrapper = styled.div`\r\n  margin: 20px;\r\n`;\r\n\r\nexport const TitleTextSpan = styled.span`\r\n  font-size: 25px;\r\n`;\r\n\r\n\r\nexport const TitleTextSpan2 = styled.span`\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const ContextRegularSpan = styled.span`\r\n  font-size: 20px;\r\n  font-weight: normal;\r\n`;\r\n\r\n\r\nexport const ImageContainer = styled.div`\r\n  width: 140px;\r\n  height: 140px;\r\n  border: 1px solid #1890FF;\r\n`;\r\n\r\nexport const TitleWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const DataSetTitle = styled.div`\r\n  margin-top: 20px;\r\n  height: auto;\r\n  width: 648px;\r\n`;\r\n\r\n// 是否已经标注\r\n// 撤销笔画\r\n// 跳转到哪一个字（记录个人标注的进度）+ 30/111","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport strokesData from './config/strokes-detail.json';\nimport { images } from './config/images.json';\n\nimport {\n  Wrapper,\n  RightWrapper,\n  StrokeShow,\n  LeftWrapper,\n  CharacterWrapper,\n  FunctionWrapper,\n  HistoryWrapper,\n  Character,\n  ButtonWrapper,\n  StrokeNameList,\n  TitleTextSpan,\n  ContextRegularSpan,\n  ImageContainer,\n  TitleWrapper,\n  DataSetTitle,\n  TitleTextSpan2\n} from './style';\n\n// import StrokePicker from './components/stroke-picker';\n\nimport { Button, Radio, Progress, Image, Descriptions, Badge, message, Input, Spin, Alert } from 'antd';\n\nimport { UserOutlined } from '@ant-design/icons';\n\nconst RegisterListener = () => {\n    document.addEventListener(\"keydown\", (e) => {\n      switch (e.code) {\n        case \"KeyZ\":\n          console.log(\"Z\");\n          break;\n        case \"KeyX\":\n          console.log(\"X\");\n          break;\n        case \"KeyC\":\n          console.log(\"C\");\n          break;\n        case \"KeyV\":\n          console.log(\"V\");\n          break;\n        default: \n          break;\n      }\n    })\n}\n\nconst TextRegular = (text) => {\n  return (\n    <ContextRegularSpan>{text}</ContextRegularSpan>\n  )\n}\n\n\nconst DescriptionArea = (currentStroke, tempPointsLength) => {\n  const length = currentStroke.strokeOrderLength;\n  return (\n    <Descriptions \n      style={{ width: \"650px\", padding: \"20px\", \n        border: \"1px solid black\",\n        borderRadius: \"10px\",\n        borderTop: \"1px solid white\"}}\n      title={\n        <TitleWrapper>\n          <TitleTextSpan>当前笔画信息：{`${currentStroke.id} - ${currentStroke.name}`} </TitleTextSpan>\n          <div>\n            {/* <Badge status={tempPointsLength === length ? \"success\" : \"processing\"}></Badge> */}\n            {TextRegular(`关键点标记进度[${tempPointsLength}/${length}]: `)}\n            <Progress percent={(tempPointsLength/length)*100} steps={length} showInfo={false}/>\n          </div>\n        </TitleWrapper>\n      } \n      bordered\n    >\n      <Descriptions.Item label={TextRegular('笔画示意图')}>\n        <ImageContainer>\n          <Image src={`/assets/stroke-example/${currentStroke.strokeOrderImageUrl}`} />\n        </ImageContainer>\n      </Descriptions.Item>\n      <Descriptions.Item label={TextRegular('节点分布图')} span={2}>\n        <ImageContainer>\n          <Image src={`/assets/stroke-order/${currentStroke.strokeOrderImageUrl}`} />\n        </ImageContainer>\n      </Descriptions.Item>\n    </Descriptions>\n  )\n};\n\nconst getMapImageUrls = () => {\n    const res = {};\n    images.forEach((image) => {\n      res[image.id] = image.fileName;\n    });\n    return res;\n}\n\nconst App = () => {\n  // useRef Hooks\n  const canvasRef = useRef(null);\n  \n  // useState Hooks\n  const [ currentStroke, setCurrentStroke ] = useState({});\n  const [ currentChar, setCurrentChar ] = useState({});\n  const [ strokeList, setStrokeList ] = useState({});\n  const [ strokeIndex, setStrokeIndex ] = useState(1); // 现在是第几个笔画\n  const [ strokeCompleted,  setStrokeCompleted] = useState(false); // 记录是否完成当前字\n  const [ imagesUrls, mapUrls ] = useState({});\n  const [ systemInfo, setSystemInfo ] = useState({});\n  const [ result, setResult ] = useState([]);\n  const [ tempPoints, addPoints ] = useState([]);\n  const [ currentAuthor, setCurrentAuthor ] = useState([]);\n\n  // Loading\n  const [ sysInfoLoading, setSysInfoLoading ] = useState(true);\n  const [ currentCharLoading, setCurrentCharLoading ] = useState(true);\n  const [ strokeListLoading, setStrokeListLoading ] = useState(true);\n  const [ submitLoading, setSubmitLoading ] = useState(false);\n  const [ submitSuccess, setSubmitSuccess ] = useState(false);\n\n  // useEffect Hooks\n    // init char\n  useEffect(() => {\n    (async () => {\n      setSysInfoLoading(() => true);\n      const reqResult = await axios('http://localhost:4000/api/system-info');\n      setSystemInfo(() => reqResult.data);\n      setSysInfoLoading(() => false);\n    })();\n    canvasClear(); // 顺便清空一下canvas\n  }, [ submitSuccess ]);\n    // 重新获取字的信息和笔画的信息\n  useEffect(() => {\n    if (sysInfoLoading) return;\n    (async () => {\n      setCurrentCharLoading(() => true);\n      const reqResult = await axios('http://localhost:4000/api/character-info?id=' + systemInfo.currentImageId);\n      setCurrentChar(() => reqResult.data);\n      setCurrentCharLoading(() => false);\n      setSubmitSuccess(() => false);\n      setStrokeIndex(() => 1);\n      setStrokeCompleted(() => false);\n      setResult(() => []);\n      setCurrentAuthor(() => systemInfo.author);\n    })();\n  }, [ sysInfoLoading, systemInfo ]);\n    // 如果获取了字的信息，那么更新笔画的信息\n  useEffect(() => {\n    if (currentCharLoading) return;\n    (async () => {\n      setStrokeListLoading(() => true);\n      const reqResult = await axios('http://localhost:4000/api/strokes-list?id=' + currentChar.c_id);\n      setStrokeList(() => reqResult.data);\n      setStrokeListLoading(() => false);\n    })();\n  }, [ currentCharLoading, currentChar ]);\n    // 笔画列表动了，那笔画进度肯定要清零。\n  useEffect(() => {\n    setStrokeIndex(() => 1);\n  }, [ strokeList ]);\n    // 笔画进度一旦修改，那么当前笔画一定要更新，缓存数据要清零\n  useEffect(() => {\n    if (strokeListLoading) return;\n    setCurrentStroke(() => strokesData.strokes[strokeList[strokeIndex-1]-1]);\n    addPoints(() => []);\n  }, [ strokeListLoading, strokeIndex, strokeList ]);\n\n\n  useEffect(() => RegisterListener, []);\n  useEffect(() => mapUrls(getMapImageUrls), []);\n  // useEffect(() => {\n  //   if (tempPoints.length === currentStroke.strokeOrderLength) {\n  //     message.success('此笔画已完成，按下快捷键「C」进入下一个笔画');\n  //     return;\n  //   }\n  // }, [ tempPoints ]);\n\n  const Paint = (e) => { // 每次点击canvas\n    // console.log(tempPoints.length, currentStroke.strokeOrderLength);\n    if (tempPoints.length + 1 > currentStroke.strokeOrderLength) {\n      message.error('关键点数量溢出，请检查数量');\n      return;\n    }\n    const canvas = canvasRef.current;\n    const { left, top } = canvas.getBoundingClientRect();\n    const x = e.clientX - left, y = e.clientY - top;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = 4;\n    ctx.beginPath();\n    ctx.arc(x, y, 5, 0, 2*Math.PI);\n    ctx.strokeStyle = \"magenta\";\n    ctx.fillStyle = \"magenta\";\n    ctx.stroke();\n    console.log(tempPoints);\n    addPoints(() => {\n      return [...tempPoints, [x, y]];\n    });\n  }\n\n  const canvasClear = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, 256, 256);\n    addPoints(() => []);\n  }\n\n  const nextStroke = () => {\n    if (strokeCompleted) {\n      message.warning(\"已经录入完成所有笔画，请进入下一个字\");\n      return;\n    }\n    const thisStroke = {\n      id: currentStroke.id,\n      name: currentStroke.name,\n      record: tempPoints\n    } \n    canvasClear();\n    setResult(() => [...result, thisStroke]);\n    if (strokeIndex < strokeList.length) {\n      setStrokeIndex(strokeIndex => strokeIndex + 1);\n    } else {\n      setStrokeCompleted(true);\n    }\n  }\n\n  const reStartChar = () => {\n    canvasClear();\n    setResult(() => []);\n    setStrokeCompleted(() => false);\n    setStrokeIndex(() => 1);\n  }\n\n  const submitChar = () => {\n    setSubmitLoading(true);\n    (async () => {\n      // console.log(currentChar);\n      const ans = {\n        dataSetId: systemInfo.dataSetId,\n        currentImageId: systemInfo.currentImageId,\n        author: currentAuthor,\n        charId: currentChar.id,\n        charName: currentChar.name,\n        result\n      }\n      const reqResult = await axios.post('http://localhost:4000/api/submit', ans);\n      console.log(reqResult.data);\n      (reqResult.data === \"success\") && setSubmitSuccess(() => true);\n      setSubmitLoading(false);\n    })();\n  }\n\n  return (\n    <Wrapper>\n      <LeftWrapper>\n        <StrokeNameList>\n          <span style={{ fontSize: \"25px\", margin: \"10px\" }}>笔画列表（自动选择）</span>\n          {\n            strokeListLoading ? (\n              <Spin tip=\"Loading...\">\n                <Alert\n                  message=\"strokeList\"\n                  description=\"strokeList strokeList strokeList strokeList strokeList strokeList \"\n                  type=\"info\"\n                />\n              </Spin>\n            ) : (\n              <Radio.Group \n                style={{margin: \"17px\" }}\n                value={strokeList[strokeIndex-1]} size=\"large\" buttonStyle=\"solid\">\n                {\n                  strokesData.strokes.map((item) => {\n                    return (\n                      <Radio.Button key={`stroke_${item.id}`} value={item.id} \n                        onClick={() => message.warning(\"目前不允许修改笔顺，请修改配置文件适配\")}\n                      >\n                        { item.name }\n                      </Radio.Button>\n                    )\n                  })\n                }\n              </Radio.Group>\n            )\n          }\n        </StrokeNameList>\n        <StrokeShow>\n          { \n            currentCharLoading ? (\n              <Spin tip=\"Loading...\">\n                <Alert\n                  message=\"currentChar\"\n                  description=\"currentChar currentChar currentChar currentChar currentChar currentChar \"\n                  type=\"info\"\n                />\n              </Spin>\n            ) : (\n              DescriptionArea(currentStroke, tempPoints.length)\n            )\n          } \n        </StrokeShow >\n      </LeftWrapper>\n      <RightWrapper>\n            {\n              sysInfoLoading && currentCharLoading ? (\n              <Spin tip=\"Loading...\">\n                <Alert\n                  message=\"sysInfo, currentChar\"\n                  description=\" \"\n                  type=\"info\"\n                />\n              </Spin>\n              ) : (\n                <DataSetTitle>\n                  <TitleWrapper>\n                    <TitleTextSpan>\n                      数据集：{systemInfo.dataSetId}号\n                      {/* <span style={{fontSize: \"20px\", color: \"#909090\"}}>     进度：[{systemInfo.currentImageId}/{systemInfo.total}]</span> */}\n                    </TitleTextSpan>\n                    <Input \n                      style={{ width: '40%' }} \n                      size=\"large\" \n                      placeholder=\"记录人\" \n                      prefix={<UserOutlined />} \n                      value={currentAuthor} \n                      onChange={e => setCurrentAuthor(() => e.target.value)}\n                    />\n                  </TitleWrapper>\n                  <TitleTextSpan2><Badge status=\"processing\" />当前字：\"{currentChar.name}\"，进度：{systemInfo.currentImageId}/{systemInfo.total}</TitleTextSpan2>\n                </DataSetTitle>\n              )\n            }\n        <CharacterWrapper>\n          <FunctionWrapper>\n            <span>请在红框内进行标记</span>\n            <Character>\n              {\n                sysInfoLoading ? (\n                <Spin tip=\"Loading...\">\n                  <Alert\n                    message=\"sysInfo\"\n                    description=\"sysInfo sysInfo sysInfo sysInfo \"\n                    type=\"info\"\n                  />\n                </Spin>\n                ) : (\n                  <img \n                    alt=\"\"\n                    style={{\n                      left: \"0px\",\n                      position: \"absolute\"\n                    }}\n                    src={`/assets/source/${systemInfo.dataSetId}/${imagesUrls[systemInfo.currentImageId]}`}\n                  >\n                  </img>\n                )\n              }\n\n              <canvas\n                width=\"256px\"\n                height=\"256px\"\n                ref={canvasRef}\n                onClick={e => Paint(e)}\n              >\n              </canvas>\n            </Character>\n            <ButtonWrapper>\n              <Button \n                size=\"large\" \n                type=\"primary\" \n                onClick={(currentStroke) => nextStroke(currentStroke)}\n                disabled={tempPoints.length !== currentStroke.strokeOrderLength}\n              >下一个笔画（C）</Button>\n              <Button size=\"large\" onClick={canvasClear}> 清空该笔画关键点（Z）</Button>\n              <Button size=\"large\" danger onClick={reStartChar}>重新开始本字（X）</Button>\n              <Button size=\"large\" type=\"dashed\" danger>本字难以辨认，跳过（H）</Button>\n            </ButtonWrapper>\n          </FunctionWrapper>\n          <HistoryWrapper>\n            <ContextRegularSpan\n              style={{\n                margin: 10,\n                borderBottom: '2px solid black'\n              }}\n            >\n              输出结果<br></br>\n            </ContextRegularSpan>\n            <div style={{ overflow: \"scroll\", height: \"340px\", width: \"100%\"}}>\n            { \n              strokeListLoading ? (\n                <Spin tip=\"strokeList\">\n                </Spin>\n              ) : (\n                  result.map((item, index) => {\n                    console.log(item);\n                    return (\n                        <div key={index} style={{ fontSize: \"18px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}> \n                          <span>\n                            ({index + 1}) {item.name}\n                          </span>\n                          <span\n                            style={{\n                              margin: 5,\n                              borderBottom: '1px solid gray'\n                            }}\n                          >\n                            <div \n                              // style={{ fontSize: \"18px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n                            >\n                              {\n                                item.record.map((item2, index2) => {\n                                  return (\n                                    <span key={index2}> ({item2[0]}, {item2[1]})</span>\n                                  )\n                                })\n                              }\n                            </div>\n                          </span>\n                        </div>\n                    )\n                  })\n              )\n            }\n            </div>\n            <div>\n              <Progress style={{margin: \"10px\"}} type=\"circle\" status={ submitSuccess ? null : \"active\"} percent={\n                strokeCompleted ? 100 : (((strokeIndex-1)/strokeList.length)*100)\n              } width={80} />\n              { submitLoading ? (<Spin />) : null }\n            </div>\n            <Button \n              // style={{margin: \"10px\"}} \n              size=\"large\" type=\"primary\" \n              onClick={submitChar} \n              disabled={!strokeCompleted}\n            >提交本字（V）</Button>\n          </HistoryWrapper>\n        </CharacterWrapper>\n      </RightWrapper>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}